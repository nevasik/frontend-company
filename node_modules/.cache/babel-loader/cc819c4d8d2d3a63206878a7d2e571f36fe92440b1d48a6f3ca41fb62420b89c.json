{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createPerson, fetchPeople, getPerson, removePerson, updatePerson } from \"../thunks/peopleThunk\";\nconst defaultPerson = {\n  firstName: \"\",\n  secondName: \"\",\n  lastName: \"\",\n  email: \"\",\n  role: \"ADMIN\",\n  login: \"\",\n  password: \"\"\n};\nconst people = createSlice({\n  name: 'people',\n  initialState: {\n    people: [],\n    loading: false,\n    error: null,\n    person: defaultPerson\n  },\n  reducers: {\n    editPerson(state, action) {\n      const person = state.people.find(p => p.id === action.payload);\n      if (person) {\n        state.person = person;\n      } else {\n        state.person = defaultPerson;\n      }\n    },\n    setPerson(state, action) {\n      state.person = action.payload;\n    },\n    setError(state, action) {\n      state.error = action.payload;\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(fetchPeople.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchPeople.fulfilled, (state, action) => {\n      state.loading = false;\n      state.people = action.payload;\n    });\n    builder.addCase(fetchPeople.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error;\n    });\n    builder.addCase(createPerson.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(createPerson.fulfilled, (state, action) => {\n      state.loading = false;\n      state.people.push(action.payload);\n    });\n    builder.addCase(createPerson.rejected, (state, action) => {\n      state.loading = false;\n      state.error = {\n        title: \"Не удалось создать\",\n        text: action.error.response.data.message\n      };\n    });\n    builder.addCase(removePerson.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(removePerson.fulfilled, (state, action) => {\n      state.loading = false;\n      const index = state.people.findIndex(p => p.id === action.payload);\n      state.people.splice(index, 1);\n    });\n    builder.addCase(removePerson.rejected, (state, action) => {\n      state.loading = false;\n      state.error = {\n        title: \"Не удалось удалить\"\n      };\n    });\n    builder.addCase(updatePerson.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(updatePerson.fulfilled, (state, action) => {\n      state.loading = false;\n      const index = state.people.findIndex(p => p.id === action.payload.id);\n      state.people[index] = action.payload;\n    });\n    builder.addCase(updatePerson.rejected, (state, action) => {\n      state.loading = false;\n      state.error = {\n        title: \"Не удалось обновить\"\n      };\n    });\n    builder.addCase(getPerson.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(getPerson.fulfilled, (state, action) => {\n      state.loading = false;\n      state.person = action.payload.entity;\n    });\n    builder.addCase(getPerson.rejected, (state, action) => {\n      state.loading = false;\n      state.error = {\n        title: \"Не удалось обновить\"\n      };\n    });\n  }\n});\nexport default people.reducer;\nexport const {\n  getAll,\n  getById,\n  editPerson,\n  setPerson,\n  setError\n} = people.actions;","map":{"version":3,"names":["createSlice","createPerson","fetchPeople","getPerson","removePerson","updatePerson","defaultPerson","firstName","secondName","lastName","email","role","login","password","people","name","initialState","loading","error","person","reducers","editPerson","state","action","find","p","id","payload","setPerson","setError","extraReducers","builder","addCase","pending","fulfilled","rejected","push","title","text","response","data","message","index","findIndex","splice","entity","reducer","getAll","getById","actions"],"sources":["/Users/dimapoplaukhin/Downloads/compaign-front-final/src/store/slices/peopleSlice.js"],"sourcesContent":["import {  createSlice } from \"@reduxjs/toolkit\";\r\nimport { createPerson, fetchPeople, getPerson, removePerson, updatePerson } from \"../thunks/peopleThunk\";\r\nconst defaultPerson = {firstName: \"\", secondName: \"\", lastName: \"\", email: \"\", role: \"ADMIN\", login: \"\", password: \"\"}\r\n\r\nconst people = createSlice({\r\n    name: 'people',\r\n    initialState: {\r\n        people: [],\r\n        loading: false,\r\n        error: null,\r\n        person: defaultPerson\r\n    },\r\n    reducers: {\r\n        editPerson(state, action) {\r\n           const person = state.people.find(p => p.id === action.payload)\r\n           if (person){\r\n            state.person = person\r\n           } else {\r\n            state.person = defaultPerson\r\n           }\r\n        },\r\n        setPerson(state, action) {\r\n            state.person = action.payload\r\n        },\r\n        setError(state, action) {\r\n            state.error = action.payload\r\n        }\r\n    },\r\n    extraReducers(builder) {\r\n        builder.addCase(fetchPeople.pending, (state, action) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(fetchPeople.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.people = action.payload\r\n        })\r\n        builder.addCase(fetchPeople.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.error = action.error\r\n        })\r\n        \r\n        builder.addCase(createPerson.pending, (state, action) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(createPerson.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.people.push(action.payload)\r\n        })\r\n        builder.addCase(createPerson.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.error = {title: \"Не удалось создать\", text: action.error.response.data.message}\r\n        })\r\n\r\n        builder.addCase(removePerson.pending, (state, action) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(removePerson.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            const index = state.people.findIndex(p => p.id === action.payload)\r\n            state.people.splice(index, 1)\r\n        })\r\n        builder.addCase(removePerson.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.error = {title: \"Не удалось удалить\"}\r\n        })\r\n\r\n        builder.addCase(updatePerson.pending, (state, action) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(updatePerson.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            const index = state.people.findIndex(p => p.id === action.payload.id)\r\n            state.people[index] = action.payload\r\n        })\r\n        builder.addCase(updatePerson.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.error = {title: \"Не удалось обновить\"}\r\n        })\r\n\r\n        builder.addCase(getPerson.pending, (state, action) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getPerson.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.person = action.payload.entity\r\n        })\r\n        builder.addCase(getPerson.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.error = {title: \"Не удалось обновить\"}\r\n        })\r\n    }\r\n})\r\n\r\nexport default people.reducer\r\nexport const {getAll, getById, editPerson, setPerson, setError} = people.actions"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}