{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../api/common\";\nconst fetchPeople = createAsyncThunk('people/getAll', async () => {\n  const response = await api.get(\"/people/all\");\n  return response.data;\n});\nconst createPerson = createAsyncThunk(\"people/create\", async person => {\n  const response = await api.post(\"/people/new\", person);\n  return response.data;\n});\nconst removePerson = createAsyncThunk(\"people/remove\", async id => {\n  const response = await api.delete(`/people/${id}`);\n  return id;\n});\nconst updatePerson = createAsyncThunk(\"people/update\", async person => {\n  const response = await api.put(`/people/update/${person.id}`, person);\n  return response.data;\n});\nconst getPerson = createAsyncThunk(\"people/get\", async id => {\n  const response = await api.get(`/people/${id}`);\n  return response.data;\n});\nexport { fetchPeople, createPerson, removePerson, updatePerson, getPerson };","map":{"version":3,"names":["createAsyncThunk","api","fetchPeople","response","get","data","createPerson","person","post","removePerson","id","delete","updatePerson","put","getPerson"],"sources":["/Users/dimapoplaukhin/Downloads/compaign-front-final/src/store/thunks/peopleThunk.js"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api/common\";\r\n\r\n\r\nconst fetchPeople = createAsyncThunk('people/getAll', async () => {\r\n    const response = await api.get(\"/people/all\")\r\n    return response.data\r\n})\r\n\r\nconst createPerson = createAsyncThunk(\"people/create\", async (person) => {\r\n    const response = await api.post(\"/people/new\", person)\r\n    return response.data\r\n})\r\n\r\nconst removePerson = createAsyncThunk(\"people/remove\", async (id) => {\r\n   const response = await api.delete(`/people/${id}`)\r\n    return id\r\n})\r\n\r\nconst updatePerson = createAsyncThunk(\"people/update\", async (person) => {\r\n    const response = await api.put(`/people/update/${person.id}`, person)\r\n    return response.data\r\n})\r\n\r\nconst getPerson = createAsyncThunk(\"people/get\", async (id) => {\r\n    const response = await api.get(`/people/${id}`)\r\n    return response.data\r\n})\r\n\r\nexport {fetchPeople, createPerson, removePerson, updatePerson, getPerson}"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,GAAG,MAAM,kBAAkB;AAGlC,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,eAAe,EAAE,YAAY;EAC9D,MAAMG,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,aAAa,CAAC;EAC7C,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGN,gBAAgB,CAAC,eAAe,EAAE,MAAOO,MAAM,IAAK;EACrE,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACO,IAAI,CAAC,aAAa,EAAED,MAAM,CAAC;EACtD,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMI,YAAY,GAAGT,gBAAgB,CAAC,eAAe,EAAE,MAAOU,EAAE,IAAK;EAClE,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACU,MAAM,CAAE,WAAUD,EAAG,EAAC,CAAC;EACjD,OAAOA,EAAE;AACb,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGZ,gBAAgB,CAAC,eAAe,EAAE,MAAOO,MAAM,IAAK;EACrE,MAAMJ,QAAQ,GAAG,MAAMF,GAAG,CAACY,GAAG,CAAE,kBAAiBN,MAAM,CAACG,EAAG,EAAC,EAAEH,MAAM,CAAC;EACrE,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,MAAMS,SAAS,GAAGd,gBAAgB,CAAC,YAAY,EAAE,MAAOU,EAAE,IAAK;EAC3D,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAE,WAAUM,EAAG,EAAC,CAAC;EAC/C,OAAOP,QAAQ,CAACE,IAAI;AACxB,CAAC,CAAC;AAEF,SAAQH,WAAW,EAAEI,YAAY,EAAEG,YAAY,EAAEG,YAAY,EAAEE,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}